{"ast":null,"code":"import _slicedToArray from\"C:/\\uD3EC\\uD2B8\\uD3F4\\uB9AC\\uC624/\\uB2E4\\uD06C\\uBAA8\\uB4DC (7)/\\uB2E4\\uD06C\\uBAA8\\uB4DC (3)/\\uB2E4\\uD06C\\uBAA8\\uB4DC/react_darkmode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{createContext,useState,useContext,useCallback}from'react';import{lightTheme,darkTheme}from'../theme/theme';import{ThemeProvider as StyledProvider}from'styled-components';import{jsx as _jsx}from\"react/jsx-runtime\";var ThemeContext=/*#__PURE__*/createContext({});var ThemeProvider=function ThemeProvider(_ref){var children=_ref.children;var LocalTheme=window.localStorage.getItem('theme')||'light';var _useState=useState(LocalTheme),_useState2=_slicedToArray(_useState,2),ThemeMode=_useState2[0],setThemeMode=_useState2[1];var themeObject=ThemeMode==='light'?lightTheme:darkTheme;return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{ThemeMode:ThemeMode,setThemeMode:setThemeMode},children:/*#__PURE__*/_jsx(StyledProvider,{theme:themeObject,children:children})});};function useTheme(){var context=useContext(ThemeContext);var ThemeMode=context.ThemeMode,setThemeMode=context.setThemeMode;var toggleTheme=useCallback(function(){if(ThemeMode===\"light\"){setThemeMode(\"dark\");window.localStorage.setItem('theme','dark');}else{setThemeMode(\"light\");window.localStorage.setItem('theme','light');};},[ThemeMode]);return[ThemeMode,toggleTheme];}export{ThemeProvider,useTheme};export default ThemeProvider;","map":{"version":3,"sources":["C:/포트폴리오/다크모드 (7)/다크모드 (3)/다크모드/react_darkmode/src/context/themeProvider.js"],"names":["React","createContext","useState","useContext","useCallback","lightTheme","darkTheme","ThemeProvider","StyledProvider","ThemeContext","children","LocalTheme","window","localStorage","getItem","ThemeMode","setThemeMode","themeObject","useTheme","context","toggleTheme","setItem"],"mappings":"0PAAA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,CAA+BC,QAA/B,CAAyCC,UAAzC,CAAqDC,WAArD,KAAwE,OAAxE,CACA,OAASC,UAAT,CAAqBC,SAArB,KAAsC,gBAAtC,CACA,OAASC,aAAa,GAAIC,CAAAA,cAA1B,KAAgD,mBAAhD,C,2CAEA,GAAMC,CAAAA,YAAY,cAAGR,aAAa,CAAC,EAAD,CAAlC,CAEA,GAAMM,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAgB,IAAdG,CAAAA,QAAc,MAAdA,QAAc,CACpC,GAAMC,CAAAA,UAAU,CAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,GAAwC,OAA3D,CADoC,cAEFZ,QAAQ,CAACS,UAAD,CAFN,wCAE7BI,SAF6B,eAElBC,YAFkB,eAGpC,GAAMC,CAAAA,WAAW,CAAGF,SAAS,GAAK,OAAd,CAAwBV,UAAxB,CAAqCC,SAAzD,CAEA,mBACE,KAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAE,CAAES,SAAS,CAATA,SAAF,CAAaC,YAAY,CAAZA,YAAb,CAA9B,uBACE,KAAC,cAAD,EAAgB,KAAK,CAAEC,WAAvB,UACIP,QADJ,EADF,EADF,CAOD,CAZD,CAcA,QAASQ,CAAAA,QAAT,EAAoB,CAClB,GAAMC,CAAAA,OAAO,CAAGhB,UAAU,CAACM,YAAD,CAA1B,CADkB,GAEVM,CAAAA,SAFU,CAEkBI,OAFlB,CAEVJ,SAFU,CAECC,YAFD,CAEkBG,OAFlB,CAECH,YAFD,CAIlB,GAAMI,CAAAA,WAAW,CAAGhB,WAAW,CAAC,UAAM,CACpC,GAAIW,SAAS,GAAK,OAAlB,CAA2B,CACzBC,YAAY,CAAC,MAAD,CAAZ,CACAJ,MAAM,CAACC,YAAP,CAAoBQ,OAApB,CAA4B,OAA5B,CAAqC,MAArC,EACD,CAHD,IAIK,CACHL,YAAY,CAAC,OAAD,CAAZ,CACAJ,MAAM,CAACC,YAAP,CAAoBQ,OAApB,CAA4B,OAA5B,CAAqC,OAArC,EACD,EACF,CAT8B,CAS5B,CAACN,SAAD,CAT4B,CAA/B,CAWA,MAAO,CAAEA,SAAF,CAAaK,WAAb,CAAP,CACD,CAED,OAASb,aAAT,CAAwBW,QAAxB,EAEA,cAAeX,CAAAA,aAAf","sourcesContent":["import React, { createContext, useState, useContext, useCallback } from 'react';\r\nimport { lightTheme, darkTheme } from '../theme/theme';\r\nimport { ThemeProvider as StyledProvider } from 'styled-components';\r\n\r\nconst ThemeContext = createContext({});\r\n\r\nconst ThemeProvider = ({children}) => {\r\n  const LocalTheme = window.localStorage.getItem('theme') || 'light';\r\n  const [ThemeMode, setThemeMode] = useState(LocalTheme);\r\n  const themeObject = ThemeMode === 'light' ? lightTheme : darkTheme;\r\n\r\n  return(\r\n    <ThemeContext.Provider value={{ ThemeMode, setThemeMode }}>\r\n      <StyledProvider theme={themeObject}>\r\n        { children }\r\n      </StyledProvider>      \r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nfunction useTheme() {\r\n  const context = useContext(ThemeContext);\r\n  const { ThemeMode, setThemeMode } = context;\r\n\r\n  const toggleTheme = useCallback(() => {\r\n    if (ThemeMode === \"light\") {\r\n      setThemeMode(\"dark\");\r\n      window.localStorage.setItem('theme', 'dark');\r\n    }\r\n    else {\r\n      setThemeMode(\"light\")\r\n      window.localStorage.setItem('theme', 'light');\r\n    };\r\n  }, [ThemeMode]);\r\n  \r\n  return [ ThemeMode, toggleTheme];\r\n}\r\n\r\nexport { ThemeProvider, useTheme };\r\n\r\nexport default ThemeProvider;"]},"metadata":{},"sourceType":"module"}