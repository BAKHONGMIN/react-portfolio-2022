{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\uD3EC\\uD2B8\\uD3F4\\uB9AC\\uC624\\\\\\uC644\\uC131\\\\\\uB2E4\\uD06C\\uBAA8\\uB4DC (7)\\\\\\uB2E4\\uD06C\\uBAA8\\uB4DC (3)\\\\\\uB2E4\\uD06C\\uBAA8\\uB4DC\\\\react_darkmode\\\\src\\\\context\\\\themeProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useState, useContext, useCallback } from 'react';\nimport { lightTheme, darkTheme } from '../theme/theme';\nimport { ThemeProvider as StyledProvider } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext({});\n\nconst ThemeProvider = ({\n  children\n}) => {\n  _s();\n\n  const LocalTheme = window.localStorage.getItem('theme') || 'light';\n  const [ThemeMode, setThemeMode] = useState(LocalTheme);\n  const themeObject = ThemeMode === 'light' ? lightTheme : darkTheme;\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      ThemeMode,\n      setThemeMode\n    },\n    children: /*#__PURE__*/_jsxDEV(StyledProvider, {\n      theme: themeObject,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ThemeProvider, \"HEVu8HZ9sS79NqtEgOKAuhCvyfY=\");\n\n_c = ThemeProvider;\n\nfunction useTheme() {\n  _s2();\n\n  const context = useContext(ThemeContext);\n  const {\n    ThemeMode,\n    setThemeMode\n  } = context;\n  const toggleTheme = useCallback(() => {\n    if (ThemeMode === \"light\") {\n      setThemeMode(\"dark\");\n      window.localStorage.setItem('theme', 'dark');\n    } else {\n      setThemeMode(\"light\");\n      window.localStorage.setItem('theme', 'light');\n    }\n\n    ;\n  }, [ThemeMode]);\n  return [ThemeMode, toggleTheme];\n}\n\n_s2(useTheme, \"49bENqbCCOlOnlc8h5yCZPpov3c=\");\n\nexport { ThemeProvider, useTheme };\nexport default ThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["C:/포트폴리오/완성/다크모드 (7)/다크모드 (3)/다크모드/react_darkmode/src/context/themeProvider.js"],"names":["React","createContext","useState","useContext","useCallback","lightTheme","darkTheme","ThemeProvider","StyledProvider","ThemeContext","children","LocalTheme","window","localStorage","getItem","ThemeMode","setThemeMode","themeObject","useTheme","context","toggleTheme","setItem"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,UAAzC,EAAqDC,WAArD,QAAwE,OAAxE;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,gBAAtC;AACA,SAASC,aAAa,IAAIC,cAA1B,QAAgD,mBAAhD;;AAEA,MAAMC,YAAY,gBAAGR,aAAa,CAAC,EAAD,CAAlC;;AAEA,MAAMM,aAAa,GAAG,CAAC;AAACG,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AACpC,QAAMC,UAAU,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,KAAwC,OAA3D;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAACS,UAAD,CAA1C;AACA,QAAMM,WAAW,GAAGF,SAAS,KAAK,OAAd,GAAwBV,UAAxB,GAAqCC,SAAzD;AAEA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAES,MAAAA,SAAF;AAAaC,MAAAA;AAAb,KAA9B;AAAA,2BACE,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAEC,WAAvB;AAAA,gBACIP;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAZD;;GAAMH,a;;KAAAA,a;;AAcN,SAASW,QAAT,GAAoB;AAAA;;AAClB,QAAMC,OAAO,GAAGhB,UAAU,CAACM,YAAD,CAA1B;AACA,QAAM;AAAEM,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8BG,OAApC;AAEA,QAAMC,WAAW,GAAGhB,WAAW,CAAC,MAAM;AACpC,QAAIW,SAAS,KAAK,OAAlB,EAA2B;AACzBC,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACAJ,MAAAA,MAAM,CAACC,YAAP,CAAoBQ,OAApB,CAA4B,OAA5B,EAAqC,MAArC;AACD,KAHD,MAIK;AACHL,MAAAA,YAAY,CAAC,OAAD,CAAZ;AACAJ,MAAAA,MAAM,CAACC,YAAP,CAAoBQ,OAApB,CAA4B,OAA5B,EAAqC,OAArC;AACD;;AAAA;AACF,GAT8B,EAS5B,CAACN,SAAD,CAT4B,CAA/B;AAWA,SAAO,CAAEA,SAAF,EAAaK,WAAb,CAAP;AACD;;IAhBQF,Q;;AAkBT,SAASX,aAAT,EAAwBW,QAAxB;AAEA,eAAeX,aAAf","sourcesContent":["import React, { createContext, useState, useContext, useCallback } from 'react';\r\nimport { lightTheme, darkTheme } from '../theme/theme';\r\nimport { ThemeProvider as StyledProvider } from 'styled-components';\r\n\r\nconst ThemeContext = createContext({});\r\n\r\nconst ThemeProvider = ({children}) => {\r\n  const LocalTheme = window.localStorage.getItem('theme') || 'light';\r\n  const [ThemeMode, setThemeMode] = useState(LocalTheme);\r\n  const themeObject = ThemeMode === 'light' ? lightTheme : darkTheme;\r\n\r\n  return(\r\n    <ThemeContext.Provider value={{ ThemeMode, setThemeMode }}>\r\n      <StyledProvider theme={themeObject}>\r\n        { children }\r\n      </StyledProvider>      \r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nfunction useTheme() {\r\n  const context = useContext(ThemeContext);\r\n  const { ThemeMode, setThemeMode } = context;\r\n\r\n  const toggleTheme = useCallback(() => {\r\n    if (ThemeMode === \"light\") {\r\n      setThemeMode(\"dark\");\r\n      window.localStorage.setItem('theme', 'dark');\r\n    }\r\n    else {\r\n      setThemeMode(\"light\")\r\n      window.localStorage.setItem('theme', 'light');\r\n    };\r\n  }, [ThemeMode]);\r\n  \r\n  return [ ThemeMode, toggleTheme];\r\n}\r\n\r\nexport { ThemeProvider, useTheme };\r\n\r\nexport default ThemeProvider;"]},"metadata":{},"sourceType":"module"}